# Generated by Django 5.1.6 on 2025-03-13 13:22

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('crypto_currency', '0008_chartpreference_and_more'),
        ('user_account', '0013_remove_userdetail_referral_code_and_more'),
        ('wallet', '0014_transaction_comment'),
    ]

    operations = [
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_type', models.CharField(choices=[('buy', 'Buy'), ('sell', 'Sell')], max_length=10)),
                ('execution_type', models.CharField(choices=[('market', 'Market'), ('limit', 'Limit')], default='limit', max_length=10)),
                ('price', models.DecimalField(decimal_places=8, max_digits=24)),
                ('amount', models.DecimalField(decimal_places=8, max_digits=24)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('is_approved', models.BooleanField(default=True)),
                ('is_declined', models.BooleanField(default=False)),
                ('cryptocurrency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='crypto_currency.cryptocurrency')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='user_account.user')),
                ('wallet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='wallet.wallet')),
            ],
        ),
        migrations.CreateModel(
            name='Trade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=8, max_digits=24)),
                ('amount', models.DecimalField(decimal_places=8, max_digits=24)),
                ('fee', models.DecimalField(decimal_places=8, default=0, max_digits=24)),
                ('executed_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('buy_order', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='buy_trade', to='trading.order')),
                ('buyer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='purchases', to='user_account.user')),
                ('cryptocurrency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trades', to='crypto_currency.cryptocurrency')),
                ('sell_order', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sell_trade', to='trading.order')),
                ('seller', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sales', to='user_account.user')),
            ],
        ),
        migrations.CreateModel(
            name='TradingPair',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True)),
                ('base_currency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='base_pairs', to='crypto_currency.cryptocurrency')),
                ('quote_currency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quote_pairs', to='crypto_currency.cryptocurrency')),
            ],
            options={
                'unique_together': {('base_currency', 'quote_currency')},
            },
        ),
    ]
